name: Laravel static checks
on:
  push:
    branches: ['main']

  pull_request:
    branches: ['*']

jobs:
  pull-code-and-install-deps:
    runs-on: 'digital-ocean'
    steps:
      - uses: actions/checkout@v4

      - name: Copy .env
        run: |
          cp /home/runner/envs/.env.main.ci ./.env.testing;
          cp /home/runner/envs/.env.main.ci ./.env;

      - name: Replace phpunit config
        run: |
          cp /home/runner/envs/phpunits/phpunit-main.xml phpunit.xml

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

  check-convention:
    name: 'Checking coding convention'
    runs-on: 'digital-ocean'
    needs:
      - pull-code-and-install-deps

    steps:
      - name: "Check code convention"
        run: composer run-script check:convention

  unit-tests:
    name: "Run PHP Unit Test"
    runs-on: 'digital-ocean'
    needs:
      - pull-code-and-install-deps

    steps:
      - name: Create Database
        run: mysqladmin -h127.0.0.1 -u${{ secrets.CI_MYSQL_USER }} --password="${{ secrets.CI_MYSQL_PASSWORD }}" create ${{ vars.CI_MYSQL_DB_NAME }} || true

      - name: Execute db-migrate
        run: php artisan migrate --force

      - name: Execute db-seeds
        run: php artisan db:seed --force

      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        run: composer run-script test

  code-coverage:
    name: 'Check code coverage'
    runs-on: 'digital-ocean'
    needs:
      - check-convention
      - unit-tests
    steps:
      - name: Run test coverage
        run: composer run-script test:coverage

      - name: Make code coverage badge
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        with:
          coverage_badge_path: output/coverage.svg
          push_badge: false

      - name: Git push to image-data branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          publish_dir: ./output
          publish_branch: image-data
          github_token: ${{ secrets.GITHUB_TOKEN }}
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'

      - name: 'Cleanup report'
        run: |
          sudo rm -rf ./output

  deploy:
    name: "Deploy"
    runs-on: 'digital-ocean'
    if: github.ref_name == 'main' && github.event_name == 'push'
    needs:
      - code-coverage
    steps:
      - name: 'pull code'
        working-directory: '${{ secrets.DEPLOY_DIR }}'
        run: |
          git fetch origin ${{ github.ref_name }}
          git reset --hard origin/${{ github.ref_name }}

      - name: Install Dependencies
        working-directory: '${{ secrets.DEPLOY_DIR }}'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader

      - name: Apply Production ENV file
        working-directory: '${{ secrets.DEPLOY_DIR }}'
        run: "cp ${{ secrets.ENV_PATH }} ./.env"

      - name: Dump autoload
        working-directory: '${{ secrets.DEPLOY_DIR }}'
        run: composer dump-autoload

      - name: Migrate DB artifact
        working-directory: '${{ secrets.DEPLOY_DIR }}'
        run: |
          php artisan migrate --force
          php artisan db:seed --force
